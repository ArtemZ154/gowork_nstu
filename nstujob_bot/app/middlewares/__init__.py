from aiogram import types
from aiogram.dispatcher.middlewares import BaseMiddleware
from aiogram.dispatcher.handler import CancelHandler
import logging


class LoggingMiddleware(BaseMiddleware):
    """Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""

    async def on_pre_process_message(self, message: types.Message, data: dict):
        # –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ü–ï–†–ï–î –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        logging.info(f"User {message.from_user.id} sent: {message.text}")

    async def on_process_message(self, message: types.Message, data: dict):
        # –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –í–û –í–†–ï–ú–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∏
        pass  # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É

    async def on_post_process_message(self, message: types.Message, results, data: dict):
        # –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ü–û–°–õ–ï –æ–±—Ä–∞–±–æ—Ç–∫–∏
        logging.info(f"Message processing completed for {message.from_user.id}")


class AccessMiddleware(BaseMiddleware):
    """Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"""

    def __init__(self, allowed_roles: list):
        super().__init__()
        self.allowed_roles = allowed_roles

    async def on_pre_process_message(self, message: types.Message, data: dict):
        user_role = data.get('role', 'guest')

        if user_role not in self.allowed_roles:
            await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!")
            raise CancelHandler()


class ThrottlingMiddleware(BaseMiddleware):
    """Middleware –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Å–ø–∞–º–∞"""

    def __init__(self, limit: int = 3):
        self.limit = limit
        self.user_requests = {}  # {user_id: count}

    async def on_pre_process_message(self, message: types.Message, data: dict):
        user_id = message.from_user.id
        current = self.user_requests.get(user_id, 0)

        if current >= self.limit:
            await message.answer("‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
            raise CancelHandler()

        self.user_requests[user_id] = current + 1
